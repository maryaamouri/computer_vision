import cv2import mediapipe as mpimport timeclass FaceMeshDetection ():    def __init__(self, mode=False, maxFaces= 2,minDetecCon=0.5,minTrackCon=0.5):        self.mode = mode        self.maxFaces = maxFaces        self.minDetecCon = minDetecCon        self.minTrackCon=minTrackCon        self.mp_draw = mp.solutions.drawing_utils        self.mpFaceMesh = mp.solutions.face_mesh        self.faceMesh = self.mpFaceMesh.FaceMesh(            static_image_mode=self.mode,            max_num_faces=self.maxFaces,            min_detection_confidence=self.minDetecCon,            min_tracking_confidence=self.minTrackCon         )        self.drawSpec = self.mp_draw.DrawingSpec(thickness=1, circle_radius=1)    def findFaceMesh(self, img,draw=True):        faces = []        self.imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)        self.results = self.faceMesh.process(self.imgRGB)        if self.results.multi_face_landmarks:            for facelms in self.results.multi_face_landmarks:                if draw:                    self.mp_draw.draw_landmarks(img,facelms,self.mpFaceMesh.FACEMESH_CONTOURS,                                       self.drawSpec,self.drawSpec)                face =[]                for id,lm in enumerate(facelms.landmark):                    #print(lm)                    ih,iw,ic = img.shape                    x,y = int(lm.x*iw), int(lm.y*ih)                    #print(id,x,y)                    face.append([x,y])                faces.append(face)        return img,facesdef main():    cap = cv2.VideoCapture('people/1.mp4')    detector = FaceMeshDetection()    p_time = 0    while True:        success, img = cap.read()        img,faces = detector.findFaceMesh(img)        c_time = time.time()        fps = 1 / (c_time - p_time)        p_time = c_time        img = cv2.resize(img, (1080, 720))        if len(faces)>0:            print(len(faces))        cv2.putText(img, f'FPS:{int(fps)}', (20, 70), cv2.FONT_HERSHEY_PLAIN,                    2, (255, 0, 255), 2)        cv2.imshow('face mesh', img)        cv2.waitKey(1)if __name__ == '__main__':    main()