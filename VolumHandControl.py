import cv2import timeimport HandTrackingModule as htmimport mathimport numpy as npfrom ctypes import cast, POINTERfrom comtypes import CLSCTX_ALLfrom pycaw.pycaw import AudioUtilities, IAudioEndpointVolumedevices = AudioUtilities.GetSpeakers()interface = devices.Activate(    IAudioEndpointVolume._iid_, CLSCTX_ALL,None)volume = cast(interface, POINTER(IAudioEndpointVolume))# volume.GetMute()# volume.GetMasterVolumeLevel()volume_range = volume.GetVolumeRange()minVol = volume_range[0]maxVol = volume_range[1]cap = cv2.VideoCapture(0)cap.set(3,1080)cap.set(4,720)p_time=0vol =0volBar=400vol_persantage =0detector = htm.handDetector()while True:    success, img = cap.read()    img = detector.findHands(img)    lmlist = detector.findPosition(img,False)    if len(lmlist)>0:        x1,y1 = lmlist[4][1], lmlist[4][2]        x2,y2 = lmlist[8][1], lmlist[8][2]        cx,cy =(x1+x2)//2,(y1+y2)//2        cv2.line(img,(x1,y1),(x2,y2),(255,0,0),3)        cv2.circle(img, (x1,y1),10,(255,0,0), cv2.FILLED)        cv2.circle(img, (x2, y2),10, (255,0,0), cv2.FILLED)        cv2.circle(img, (cx, cy), 7, (10, 11, 230), cv2.FILLED)        length = math.hypot(x2-x1, y2-y1)        #print(length)        # HandRange 50 to 300        # Volume range -65 to 0        vol = np.interp(length, [50,300],[minVol,maxVol])        volBar = np.interp(length, [50, 300], [400, 150])        vol_persantage = np.interp(length, [50, 300], [0, 100])        print(vol)        volume.SetMasterVolumeLevel(vol, None)        if length<50:            cv2.circle(img, (cx, cy), 15, (10, 50, 230), cv2.FILLED)    cv2.rectangle(img, (50,150),(82,400),(255,0,0), 3)    cv2.rectangle(img, (50, int(volBar)), (82, 400), (255,0,0), cv2.FILLED)    cv2.putText(img, f'{int(vol_persantage)}%', (25, 450), cv2.FONT_HERSHEY_PLAIN,                2, (255,0,0), 2)    c_time = time.time()    fps = 1/(c_time-p_time)    p_time= c_time    cv2.putText(img,f'fps={int(fps)}', (20,70), cv2.FONT_HERSHEY_PLAIN,                2,(255,0,0),2)    cv2.imshow('img', img)    cv2.waitKey(1)